datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model user {
    id                 Int                  @id @default(autoincrement())
    email              String               @unique
    firstName          String?
    lastName           String?
    address            String?
    password           String?
    createdAt          DateTime             @default(now())
    updatedAt          DateTime             @updatedAt
    purchaseOrder      purchaseOrder[]
    salesOrder         salesOrder[]
    userTokens         userTokens[]
    userRolePermission userRolePermission[]
}

model product {
    id            Int             @id @default(autoincrement())
    productName   String          @unique
    description   String?
    purchasePrice Float
    sellingPrice  Float
    quantity      Int
    purchaseItems purchaseItems[]
    salesItems    salesItems[]
    createdAt     DateTime        @default(now())
    updatedAt     DateTime        @updatedAt
}

model purchaseOrder {
    id              Int             @id @default(autoincrement())
    purchaseOrderNo String?
    orders          purchaseItems[]
    vendorName      Vendor          @relation(fields: [vendorId], references: [id])
    vendorId        Int
    remarks         String?
    total           Float
    user            user            @relation(fields: [userId], references: [id])
    userId          Int
    createdAt       DateTime        @default(now())
    updatedAt       DateTime        @updatedAt
}

model purchaseItems {
    id              Int           @id @default(autoincrement())
    purchaseOrder   purchaseOrder @relation(fields: [purchaseOrderId], references: [id])
    purchaseOrderId Int
    product         product       @relation(fields: [productId], references: [id])
    productId       Int
    quantity        Int
    purchasePrice   Float
    total           Float
    createdAt       DateTime      @default(now())
    updatedAt       DateTime      @updatedAt
}

model salesOrder {
    id           Int          @id @default(autoincrement())
    salesOrderNo String?
    orders       salesItems[]
    customerName customer     @relation(fields: [customerId], references: [id])
    customerId   Int
    user         user?        @relation(fields: [userId], references: [id])
    userId       Int?
    remarks      String?
    total        Float
    createdAt    DateTime     @default(now())
    updatedAt    DateTime     @updatedAt
}

model salesItems {
    id           Int        @id @default(autoincrement())
    salesOrder   salesOrder @relation(fields: [salesOrderId], references: [id])
    salesOrderId Int
    product      product    @relation(fields: [productId], references: [id])
    productId    Int
    quantity     Int
    sellingPrice Float
    total        Float
    createdAt    DateTime   @default(now())
    updatedAt    DateTime   @updatedAt
}

model Vendor {
    id            Int             @id @default(autoincrement())
    name          String          @unique
    address       String?
    phone         String?
    purchaseOrder purchaseOrder[]
    createdAt     DateTime        @default(now())
    updatedAt     DateTime        @updatedAt
}

model customer {
    id         Int          @id @default(autoincrement())
    name       String       @unique
    address    String?
    phone      String?
    salesOrder salesOrder[]
    createdAt  DateTime     @default(now())
    updatedAt  DateTime     @updatedAt
}

model userTokens {
    id        Int      @id @default(autoincrement())
    user      user     @relation(fields: [userId], references: [id])
    userId    Int
    expiry    DateTime
    token     String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model roles {
    id             Int                  @id @default(autoincrement())
    name           String               @unique
    createdAt      DateTime             @default(now())
    updatedAt      DateTime             @updatedAt
    rolePermission rolesPermission[]
    user           userRolePermission[]
}

model permission {
    id             Int               @id @default(autoincrement())
    name           String
    slug           String            @unique
    rolePermission rolesPermission[]
}

model rolesPermission {
    id           Int        @id @default(autoincrement())
    roleid       Int
    permissionid Int
    role         roles      @relation(fields: [roleid], references: [id])
    permission   permission @relation(fields: [permissionid], references: [id])
}

model userRolePermission {
    id     Int   @id @default(autoincrement())
    userid Int
    roleid Int
    user   user  @relation(fields: [userid], references: [id])
    role   roles @relation(fields: [roleid], references: [id])
}
